---
import { Image } from 'astro:assets';
import { MapPin } from 'lucide-react';
import { Badge } from './ui/badge';

import { cn } from '@/lib/utils';
import { Button } from '@/components/ui/button';

const { blok, badge, showPreventaBadge, small } = Astro.props;
---

<article
  class="group relative sm:before:absolute sm:before:-inset-4 sm:before:-z-10 sm:before:shadow-sm sm:before:rounded-[36px] sm:before:bg-card-foreground/45 sm:before:opacity-0 lg:hover:before:opacity-100 transition-all duration-200 ease-in-out">
  <div
    class="aspect-[3/2] rounded-md overflow-hidden shadow-sm relative group">
    <Image
      src={blok.imagen_portada.filename}
      alt={blok.text_alt ? blok.text_alt : 'Imagen de proyecto'}
      inferSize={true}
      class="w-full h-full object-cover transition-transform duration-500 ease-in-out lg:group-hover:transform lg:group-hover:translate3d(0, 0, 0) lg:group-hover:scale-105 lg:group-hover:rotateX(0deg) lg:group-hover:rotateY(0deg)"
      style={{ transformStyle: 'preserve-3d' }}
    />

    {
      badge && !small ? (
        <>
          {showPreventaBadge && (
            <Badge
              variant="invertedOutline"
              className="absolute top-6 left-32 h-8 justify-center font-medium z-10 tracking-[0.01em] opacity-0 transition-opacity duration-300 ease-in-out lg:group-hover:opacity-100 text-sm">
              Precio de Preventa
            </Badge>
          )}

          <Badge
            variant="invertedOutline"
            className="absolute top-4 sm:top-6 h-8 left-2.5 sm:left-4 justify-center font-medium z-10 tracking-[0.01em] text-sm min-w-[106px]">
            {blok.tipo}
          </Badge>

          <Badge className="absolute top-4 sm:top-6 right-2.5 sm:right-4 h-8 justify-center font-medium z-10 tracking-[0.01em] text-sm">
            {/* <span>Desde $</span> */}
            {blok.precio.includes('$') && 'Desde '}
            {blok.precio}
            {/* <Asterisk className="w-3 h-3 text-neutral-300 -mt-1.5" /> */}
          </Badge>
        </>
      ) : (
        <>
          <Badge
            variant="invertedOutline"
            className="absolute top-4 h-8 left-2.5 sm:left-4 justify-center font-medium z-10 tracking-[0.01em] text-sm min-w-[106px]"
            client:visible>
            {blok.tipo}
          </Badge>
        </>
      )
    }
  </div>
  <div class="mt-4 flex flex-row justify-between items-center">
    <div class={cn(small ? '' : 'flex flex-col gap-y-1')}>
      <h3
        class={cn(
          `text-xl font-heading tracking-[0.01em]`,
          small ? 'sm:text-xl' : 'sm:text-2xl'
        )}>
        {blok.nombre}
      </h3>
      <div class="flex gap-1 items-center text-[#827D7D]">
        <MapPin className={cn(`w-auto`, small ? 'h-3' : 'h-4')} />
        <p class="text-sm font-medium">{blok.ubicacion}</p>
      </div>
    </div>

    {
      small ? (
        <Button
          variant="outline"
          className="cursor-pointer text-sm h-10 sm:h-10 lg:group-hover:bg-black lg:group-hover:text-white transition-colors duration-300 ease-in-out">
          Ver más
        </Button>
      ) : (
        <Button
          variant="outline"
          className="cursor-pointer h-10 sm:h-12 sm:w-[140px] lg:group-hover:bg-black lg:group-hover:text-white transition-colors duration-300 ease-in-out">
          Ver más
        </Button>
      )
    }
  </div>
  <!-- <a href={`/proyectos/${project.slug}`}>
    <span class="absolute z-10 -inset-4"></span>
  </a> -->
  <a href={`/proyectos/${blok.slug}`}>
    <span class="absolute z-10 -inset-4"></span>
  </a>
</article>
